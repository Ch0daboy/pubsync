
import React, { useState, useEffect } from 'react';
import { ContentGap } from '@/entities/ContentGap';
import { motion } from 'framer-motion';
import { Search, SlidersHorizontal, ArrowRight, Wand2 } from 'lucide-react';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';

const platformIcons = {
  youtube: 'YouTube',
  instagram: 'Instagram',
  twitter: 'Twitter',
  linkedin: 'LinkedIn',
  blog: 'Blog',
  tiktok: 'TikTok'
};

const priorityConfig = {
  high: 'bg-red-100 text-red-700 border-red-200',
  medium: 'bg-amber-100 text-amber-700 border-amber-200',
  low: 'bg-blue-100 text-blue-700 border-blue-200'
};

const ContentGapCard = ({ gap, index }) => {
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ delay: index * 0.05 }}
      className="clay-element bg-white/60 p-6 flex flex-col h-full"
    >
      <div className="flex-grow">
        <div className="flex justify-between items-start mb-3">
          <Badge className={`${priorityConfig[gap.priority]} clay-element capitalize`}>
            {gap.priority} Priority
          </Badge>
          <div className="flex items-center gap-2 text-sm font-medium text-gray-700">
            <span>{platformIcons[gap.source_platform]}</span>
            <ArrowRight className="w-4 h-4 text-gray-400" />
            <span>{platformIcons[gap.target_platform]}</span>
          </div>
        </div>
        <h3 className="font-bold text-lg text-gray-900 mb-2">{gap.title}</h3>
        <p className="text-sm text-gray-600 mb-4">{gap.description}</p>
      </div>
      <div className="mt-auto">
        <Button className="w-full clay-button bg-gradient-to-r from-purple-400 to-blue-500 hover:from-purple-500 hover:to-blue-600 text-white">
          <Wand2 className="w-4 h-4 mr-2" />
          Generate Content
        </Button>
      </div>
    </motion.div>
  );
};

export default function ContentGapsPage() {
  const [gaps, setGaps] = useState([]);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    const fetchGaps = async () => {
      try {
        const gapData = await ContentGap.list('-priority');
        setGaps(gapData);
      } catch (e) {
        console.error("Failed to fetch content gaps", e);
      } finally {
        setIsLoading(false);
      }
    };
    fetchGaps();
  }, []);

  return (
    <div className="space-y-8">
      <div className="flex items-center justify-between">
        <div className="flex items-center gap-4">
          <div className="clay-element bg-gradient-to-br from-orange-400 to-red-500 p-3">
            <Search className="w-6 h-6 text-white" />
          </div>
          <div>
            <h1 className="text-3xl font-bold gradient-text">Content Opportunities</h1>
            <p className="text-gray-600 font-medium">Discover gaps to reuse and expand your content's reach</p>
          </div>
        </div>
        <Button variant="outline" className="clay-button bg-white hover:bg-gray-50">
          <SlidersHorizontal className="w-4 h-4 mr-2" />
          Filters
        </Button>
      </div>
      
      {isLoading ? (
         <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {Array(6).fill(0).map((_, i) => (
             <div key={i} className="clay-element bg-white/40 p-6 animate-pulse space-y-4">
               <div className="h-6 bg-gray-200 rounded w-1/3"></div>
               <div className="h-5 bg-gray-200 rounded w-full"></div>
               <div className="h-10 bg-gray-200 rounded w-full"></div>
               <div className="h-10 bg-gray-300 rounded w-full mt-4"></div>
             </div>
           ))}
         </div>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {gaps.map((gap, index) => (
            <ContentGapCard key={gap.id} gap={gap} index={index} />
          ))}
        </div>
      )}
    </div>
  );
}
